







Стандартный









Стандартный











2,000 Мс











512 Мб





Условие задачи
Реализуйте элемент функциональности простейшего терминала.

            Изначально терминал содержит одну пустую строку, в начале которой находится курсор.

            Ваша программа должна уметь обрабатывать последовательность символов (строку ввода). Обработка символа
            зависит от его значения:

            


∙

\bullet

∙ Строчная буква латинского
            алфавита или цифра обозначает, что соответствующий символ вставляется в положение курсора. Курсор сдвигается
            на позицию после вставленного символа.

            


∙

\bullet

∙ Буквы 


L

\texttt{L}

L и
            


R

\texttt{R}

R
            обозначают нажатия стрелок влево и вправо. Они перемещают курсор на одну позицию влево или вправо. Если в
            соответствующем направлении нет символа, то операция
            


игнорируется

\texttt{игнорируется}

игнорируется.
            Заметьте, что курсор в любом случае
            


остаётся

\bold{остаётся}

остаётся
            в той же строке.

            


∙

\bullet

∙ Буквы 


U

\texttt{U}

U и
            


D

\texttt{D}

D
            обозначают нажатия стрелок вверх и вниз. Они перемещают курсор на одну позицию вверх или вниз. Если в
            соответствующем направлении нет строки, то операция 


игнорируется

\bold{игнорируется}

игнорируется.
            Если строка есть, но в ней нужная позиция не существует, то курсор встаёт в 


конец

\bold{конец}

конец
            строки.

            


∙

\bullet

∙ Буквы 


B

\texttt{B}

B и
            


E

\texttt{E}

E
            обозначают нажатия клавиш 


Home

\texttt{Home}

Home и
            


End

\texttt{End}

End. Они
            перемещают курсор в начало или в конец текущей строки.

            


∙

\bullet

∙ Буква 


N

\texttt{N}

N
            обозначает нажатие клавиши 


Enter

\texttt{Enter}

Enter —
            происходит вставка новой строки. Если курсор находился не в конце текущей строки, то она разрывается, и
            часть после курсора переносится в новую строку. Курсор после этой операции стоит в начале новой строки.

            Вы можете представлять себе, что эмулируете последовательность нажатий в простейшем текстовом редакторе, в
            котором курсор занимает позицию между двумя символами строки (или находится в начале или конце строки).

            Например, если строка ввода имеет вид 


otLLLrRuEe256LLLN

\texttt{otLLLrRuEe256LLLN}

otLLLrRuEe256LLLN,
            то в результате получится две строки:

            


∙

\bullet

∙ 


route

\texttt{route}

route



∙

\bullet

∙ 


256

\texttt{256}

256

            Промоделируйте последовательность действий и выведите результат.
        


Входные данные
В первой строке входных данных записано целое число 


t

t

t (


1
≤
t
≤
100

1 \le t \le 100

1≤t≤100) — количество наборов
            входных данных.

            Наборы входных данных в тесте независимы. Друг на друга они никак не влияют.

            Каждый набор входных данных состоит из одной непустой строки —последовательности символов для обработки.
            Гарантируется, что длина этой строки не превосходит 50. Допустимые символы в строке — строчные буквы
            латинского алфавита, цифры и буквы 


L

\texttt{L}

L,
            


R

\texttt{R}

R,
            


U

\texttt{U}

U,
            


D

\texttt{D}

D,
            


B

\texttt{B}

B,
            


E

\texttt{E}

E,
            


N

\texttt{N}

N.


Выходные данные
Для каждого набора входных данных выведите итоговую
            последовательность строк. Выводите все строки, включая пустые. После каждого набора выходных данных выведите
            дополнительную строку с единственным символом - (минус).




Пример теста 1

Входные данные







4
                    otLLLrRuEe256LLLN
                    LRLUUDE
                    itisatest
                    abNcdLLLeUfNxNx


Выходные данные







route
                    256
                    -

                    -
                    itisatest
                    -
                    af
                    x
                    xb
                    ecd
                    -




Набор тестов

Скачать









Стандартный






Стандартный




Стандартный





Стандартный






Стандартный




Стандартный







2,000 Мс








2,000 Мс






2,000 Мс







512 Мб








512 Мб






512 Мб
Реализуйте элемент функциональности простейшего терминала.

            Изначально терминал содержит одну пустую строку, в начале которой находится курсор.

            Ваша программа должна уметь обрабатывать последовательность символов (строку ввода). Обработка символа
            зависит от его значения:

            


∙

\bullet

∙ Строчная буква латинского
            алфавита или цифра обозначает, что соответствующий символ вставляется в положение курсора. Курсор сдвигается
            на позицию после вставленного символа.

            


∙

\bullet

∙ Буквы 


L

\texttt{L}

L и
            


R

\texttt{R}

R
            обозначают нажатия стрелок влево и вправо. Они перемещают курсор на одну позицию влево или вправо. Если в
            соответствующем направлении нет символа, то операция
            


игнорируется

\texttt{игнорируется}

игнорируется.
            Заметьте, что курсор в любом случае
            


остаётся

\bold{остаётся}

остаётся
            в той же строке.

            


∙

\bullet

∙ Буквы 


U

\texttt{U}

U и
            


D

\texttt{D}

D
            обозначают нажатия стрелок вверх и вниз. Они перемещают курсор на одну позицию вверх или вниз. Если в
            соответствующем направлении нет строки, то операция 


игнорируется

\bold{игнорируется}

игнорируется.
            Если строка есть, но в ней нужная позиция не существует, то курсор встаёт в 


конец

\bold{конец}

конец
            строки.

            


∙

\bullet

∙ Буквы 


B

\texttt{B}

B и
            


E

\texttt{E}

E
            обозначают нажатия клавиш 


Home

\texttt{Home}

Home и
            


End

\texttt{End}

End. Они
            перемещают курсор в начало или в конец текущей строки.

            


∙

\bullet

∙ Буква 


N

\texttt{N}

N
            обозначает нажатие клавиши 


Enter

\texttt{Enter}

Enter —
            происходит вставка новой строки. Если курсор находился не в конце текущей строки, то она разрывается, и
            часть после курсора переносится в новую строку. Курсор после этой операции стоит в начале новой строки.

            Вы можете представлять себе, что эмулируете последовательность нажатий в простейшем текстовом редакторе, в
            котором курсор занимает позицию между двумя символами строки (или находится в начале или конце строки).

            Например, если строка ввода имеет вид 


otLLLrRuEe256LLLN

\texttt{otLLLrRuEe256LLLN}

otLLLrRuEe256LLLN,
            то в результате получится две строки:

            


∙

\bullet

∙ 


route

\texttt{route}

route



∙

\bullet

∙ 


256

\texttt{256}

256

            Промоделируйте последовательность действий и выведите результат.
        
В первой строке входных данных записано целое число 


t

t

t (


1
≤
t
≤
100

1 \le t \le 100

1≤t≤100) — количество наборов
            входных данных.

            Наборы входных данных в тесте независимы. Друг на друга они никак не влияют.

            Каждый набор входных данных состоит из одной непустой строки —последовательности символов для обработки.
            Гарантируется, что длина этой строки не превосходит 50. Допустимые символы в строке — строчные буквы
            латинского алфавита, цифры и буквы 


L

\texttt{L}

L,
            


R

\texttt{R}

R,
            


U

\texttt{U}

U,
            


D

\texttt{D}

D,
            


B

\texttt{B}

B,
            


E

\texttt{E}

E,
            


N

\texttt{N}

N.
Для каждого набора входных данных выведите итоговую
            последовательность строк. Выводите все строки, включая пустые. После каждого набора выходных данных выведите
            дополнительную строку с единственным символом - (минус).



Пример теста 1

Входные данные







4
                    otLLLrRuEe256LLLN
                    LRLUUDE
                    itisatest
                    abNcdLLLeUfNxNx


Выходные данные







route
                    256
                    -

                    -
                    itisatest
                    -
                    af
                    x
                    xb
                    ecd
                    -




Входные данные












4
                    otLLLrRuEe256LLLN
                    LRLUUDE
                    itisatest
                    abNcdLLLeUfNxNx


Выходные данные












route
                    256
                    -

                    -
                    itisatest
                    -
                    af
                    x
                    xb
                    ecd
                    -

Набор тестов

Скачать



Набор тестов

Скачать



Скачать

Скачать
